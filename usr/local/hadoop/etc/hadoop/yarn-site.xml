<?xml version="1.0"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<!-- Site specific YARN configuration properties -->
<configuration>
	<property>
		<name>yarn.application.classpath</name>
		<value>/usr/local/hadoop/etc/hadoop, /usr/local/hadoop/share/hadoop/common/*, /usr/local/hadoop/share/hadoop/common/lib/*, /usr/local/hadoop/share/hadoop/hdfs/*, /usr/local/hadoop/share/hadoop/hdfs/lib/*, /usr/local/hadoop/share/hadoop/mapreduce/*, /usr/local/hadoop/share/hadoop/mapreduce/lib/*, /usr/local/hadoop/share/hadoop/yarn/*, /usr/local/hadoop/share/hadoop/yarn/lib/*</value>
	</property>
	<property>
		<name>yarn.log-aggregation-enable</name>
		<value>true</value>
	</property>
	<property>
		<name>yarn.log-aggregation.retain-seconds</name>
		<value>604800</value>
	</property>
	<property>
		<name>yarn.nodemanager.resource.memory-mb</name>
		<value>2048</value>
	</property>
	<property>
		<name>yarn.nodemanager.resource.cpu-vcores</name>
		<value>2</value>
	<property>
		<name>yarn.scheduler.minimum-allocation-mb</name>
		<value>1024</value>
	</property></property>
    <property>
        <name>yarn.resourcemanager.hostname.hadoop-nn1</name>
        <value>hadoop-nn1</value>
    </property>
    <property>
        <name>yarn.resourcemanager.hostname.hadoop-nn2</name>
        <value>hadoop-nn2</value>
    </property>
    <property>
        <name>yarn.nodemanager.hostname</name>
        <value>0.0.0.0</value>
    </property>
	<!--
	<property>
		<name>yarn.resourcemanager.resource-tracker.address</name>
		<value>hadoop-nn1:8025</value>
	</property>
	<property>
		<name>yarn.resourcemanager.scheduler.address</name>
		<value>hadoop-nn1:8030</value>
	</property>
	<property>
		<name>yarn.resourcemanager.address</name>
		<value>hadoop-nn1:8050</value>
	</property>
	-->
	<property>
		<name>yarn.nodemanager.aux-services</name>
		<value>mapreduce_shuffle</value>
	</property>
	<property>
		<name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>
		<value>org.apache.hadoop.mapred.ShuffleHandler</value>
	</property>
	<property>
  		<name>yarn.scheduler.capacity.maximum-am-resource-percent</name>
  		<value>100</value>
	</property>
	<property>
  		<name>yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage</name>
  		<value>100</value>
	</property>
	<property>
		<name>yarn.resourcemanager.ha.enabled</name>
		<value>true</value>
	</property>
	<property>
		<name>yarn.resourcemanager.ha.id</name>
		<value>hadoop-nn1</value>
	</property>
	<property>
		<name>yarn.resourcemanager.ha.rm-ids</name>
		<value>hadoop-nn1,hadoop-nn2</value>
	</property>
	<property>
		<name>yarn.resourcemanager.address.hadoop-nn1</name>
		<value>hadoop-nn1:8032</value>
	</property>
	<property>
		<name>yarn.resourcemanager.address.hadoop-nn2</name>
		<value>hadoop-nn2:8032</value>
	</property>
	<property>
		<name>yarn.resourcemanager.scheduler.address.hadoop-nn1</name>
		<value>hadoop-nn1:8030</value>
	</property>
	<property>
		<name>yarn.resourcemanager.scheduler.address.hadoop-nn2</name>
		<value>hadoop-nn2:8030</value>
	</property>
	<property>
		<name>yarn.resourcemanager.admin.address.hadoop-nn1</name>
		<value>hadoop-nn1:8033</value>
	</property>
		<property>
		<name>yarn.resourcemanager.admin.address.hadoop-nn2</name>
		<value>hadoop-nn2:8033</value>
	</property>
	<property>
		<name>yarn.resourcemanager.resource-tracker.address.hadoop-nn1</name>
		<value>hadoop-nn1:8031</value>
	</property>
	<property>
		<name>yarn.resourcemanager.resource-tracker.address.hadoop-nn2</name>
		<value>hadoop-nn2:8031</value>
	</property>
	<property>
		<name>yarn.resourcemanager.webapp.address.hadoop-nn1</name>
		<value>hadoop-nn1:8088</value>
	</property>
	<property>
		<name>yarn.resourcemanager.webapp.address.hadoop-nn2</name>
		<value>hadoop-nn2:8088</value>
	</property>
	<property>
		<name>yarn.resourcemanager.webapp.https.address.hadoop-nn1</name>
		<value>hadoop-nn1:8090</value>
	</property>
	<property>
		<name>yarn.resourcemanager.webapp.https.address.hadoop-nn2</name>
		<value>hadoop-nn2:8090</value>
	</property>
	<property>
		<name>yarn.resourcemanager.recovery.enabled</name>
		<value>true</value>
	</property>
	<property>
        <description>Enable the node manager to recover after starting</description>
        <name>yarn.nodemanager.recovery.enabled</name>
        <value>false</value>
    </property>	
	<property>
		<name>yarn.resourcemanager.store.class</name>
		<value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
		<description>The class to use as the persistent store. MemoryRMStateStore, NullRMStateStore, FileSystemRMStateStore, ZKRMStateStore are available currently. Default value is MemoryRMStateStore.</description>
	</property>
 	<property>
        <name>yarn.resourcemanager.ha.automatic-failover.embedded</name>
        <value>true</value>
    </property>
 	<property>
        <name>yarn.client.failover-proxy-provider</name>
        <value>org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider</value>
    </property>
	<property>
        <name>yarn.resourcemanager.cluster-id</name>
        <value>ha-cluster</value>
    </property>
	<property>
        <name>yarn.resourcemanager.ha.automatic-failover.zk-base-path</name>
        <value>/yarn-leader-election</value>
    </property>	
	<property>
        <name>yarn.resourcemanager.zk-address</name>
        <value>hadoop-nn1:2181,hadoop-nn2:2181,hadoop-dn1:2181,hadoop-dn2:2181</value>
        <description>For multiple zk services, separate them with comma</description>
    </property>
 	<property>
        <name>yarn.resourcemanager.am.max-attempts</name>
        <value>20</value>
    </property>
	<property>
        <description>Enable RM work preserving recovery. This configuration is private to YARN for experimenting the feature.  NOTE: this config has to be set on both RM and ALL NMs</description>
        <name>yarn.resourcemanager.work-preserving-recovery.enabled</name>
        <value>true</value>
    </property>
	<property>
        <description>Host:Port of the ZooKeeper server where RM state will be stored. This must be supplied when using org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore as the value for yarn.resourcemanager.store.class</description>
        <name>yarn.resourcemanager.zk.address</name>
        <value>127.0.0.1:2181</value>
    </property>		
	<property>
		<name>yarn.resourcemanager.zk-state-store.address</name>
		<value>127.0.0.1:2181</value>
	</property>
	<property>
		<name>yarn.resourcemanager.state-store.max-completed-applications</name>
		<value>1000</value>
	</property>
	<property>
        <description>The local filesystem directory in which the node manager will store state when recovery is enabled.</description>
        <name>yarn.nodemanager.recovery.dir</name>
        <value>${hadoop.tmp.dir}/yarn-nm-recovery</value>
    </property>		
</configuration>
